syntax = "proto3";

package raft.leader_election;

message RequestVote {
  int32 term = 1;
  string candidate_id = 2; // IP:port of the candidate
}

message VoteResponse {
  int32 term = 1;
  bool vote_granted = 2;
}

message AppendEntries {
  int32 term = 1;
  string leader_id = 2; // IP:port of the leader
  int32 id = 3; // id of the heartbeat/log entry
}

message AppendEntriesResponse {
  int32 term = 1;
  bool success = 2;
}

message PenaltyScore {
  int32 term = 1;
  string node_id = 2; // IP:port of the node
  double penalty_score = 3;
}

message Petition {
  int32 term = 1;
  string current_leader = 2;      // IP:port of the current leader
  string proposed_leader = 3;     // IP:port of the proposed new leader
  double latency_to_leader = 4;   // Latency from sender to current leader
}

message MessageWrapper {
  enum MessageType {
    REQUEST_VOTE = 0;
    VOTE_RESPONSE = 1;
    APPEND_ENTRIES = 2;
    APPEND_ENTRIES_RESPONSE = 3;
    PENALTY_SCORE = 4;
  }
  MessageType type = 1;
  bytes payload = 2;
}
